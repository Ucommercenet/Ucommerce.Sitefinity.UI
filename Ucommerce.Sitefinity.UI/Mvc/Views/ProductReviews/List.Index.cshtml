@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Web;
@using Newtonsoft.Json;
@using Ucommerce.Api
@using Ucommerce.Infrastructure

@if (!SystemManager.IsDesignMode)
{
    @Html.Script(Url.WidgetContent("assets/build/js/vendor.bundle.js"), "bottom", false)
    @Html.Script(Url.WidgetContent("assets/build/js/main.js"), "bottom", false)
}

@{
	Layout = null;
	var catalogLibrary = ObjectFactory.Instance.Resolve<ICatalogContext>();
	var pageNodeUrl = SiteMapBase.GetActualCurrentNode().Url.ToString();
	var currentPageUrl = UrlPath.ResolveUrl(pageNodeUrl, true, true);
	var productId = Guid.Empty;

	if (catalogLibrary.CurrentProduct != null)
	{
		productId = catalogLibrary.CurrentProduct.Guid;
	}
}

@Html.StyleSheet(Url.WidgetContent("assets/dist/css/checkout.css"), "head")
@Html.StyleSheet(Url.WidgetContent("assets/dist/css/products-review.css"), "head")

<div data-component="review-list" id="review-list">
    <script type="application/json" purl="true">
        { 
            "purl" : @Html.Raw(JsonConvert.SerializeObject(currentPageUrl)),
            "pid" : @Html.Raw(JsonConvert.SerializeObject(productId)) 
        }
    </script>
    <template v-if="Reviews">
        <div id="">
            <div v-if="displayRating">
                <span>@Html.Resource("AverageRating", "UcommerceResources"):</span>
                <show-rating :rating="averageRating"></show-rating>
                <span itemprop="ratingValue">({{ displayRating }})</span>
            </div>
            <a itemprop="reviewCount">
                {{ count }}
                <template v-if="count != 1">
                    @Html.Resource("Reviews", "UcommerceResources")
                </template>
                <template v-else>
                    @Html.Resource("Review", "UcommerceResources")
                </template>
            </a>
        </div>

        <h2 v-if="count">
            {{ count }}
            <template v-if="count > 1">
                @Html.Resource("Reviews", "UcommerceResources")
            </template>
            <template v-else>
                @Html.Resource("Review", "UcommerceResources")
            </template>
        </h2>
        <template v-for="(review, index) of Reviews">
            <div>
                <div>
                    <span>{{ index + 1 }}.</span>
                    <img src="@Url.WidgetContent("assets/dist/images/default_user.png")" />
                    <span>{{ review.Name }}</span> |
                    <span>
                        <i>{{ formatDate(review.CreatedOn) }}</i>
                    </span>
                </div>
                <show-rating :rating="review.Rating"></show-rating>
                <div>{{ review.Comments }}</div>
            </div>
        </template>
    </template>
</div>